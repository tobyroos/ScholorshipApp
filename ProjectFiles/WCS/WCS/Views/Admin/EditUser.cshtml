@model WCS.Models.User
@inject UserManager<User> userManager
@inject RoleManager<IdentityRole> roleManager

@{
    ViewData["Title"] = "Edit User";
}

<h2>Edit</h2>

<h4>User</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditUser">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MiddleInitial" class="control-label"></label>
                <input asp-for="MiddleInitial" class="form-control" />
                <span asp-validation-for="MiddleInitial" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="SecurityStamp" />
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EmailConfirmed" class="control-label">Email Confirmed: </label>
                <input asp-for="EmailConfirmed" type="checkbox" />
                <span asp-validation-for="EmailConfirmed" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Role" class="control-label"></label>
                <select asp-for="Role" class="form-control">
                    @{
                        var roles = roleManager.Roles.ToList();
                        var userRole = userManager.GetRolesAsync(Model).ToAsyncEnumerable().FirstOrDefaultAsync();
                        if (roles != null)
                        {
                            foreach (IdentityRole role in roles)
                            {
                                if (await userManager.IsInRoleAsync(Model, role.Name))
                                {
                                    <option selected>@role.Name</option>
                                }
                                else
                                {
                                    <option>@role.Name</option>
                                }
                            }
                        }
                        else
                        {
                            <option></option>
                        }

                    }
                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <button asp-action="UserList" class="btn btn-default">Cancel</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
